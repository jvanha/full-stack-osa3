{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChangeHandler","onChange","PersonForm","props","onSubmit","onSubmitHandler","nameValue","nameOnChangeHandler","numberValue","numberOnChangeHandler","type","Persons","persons","filter","onClickHandler","person","name","toLowerCase","includes","map","key","id","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","errorStyle","color","fontSize","borderStyle","padding","marginBottom","notificationStyle","Notification","message","errorValue","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","setErrorValue","useEffect","personService","initialPersons","event","target","preventDefault","personObject","window","confirm","find","p","updatedPerson","setTimeout","catch","error","createdPerson","console","log","concat","responseObject","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c0a4afe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChangeHandler }) => (\r\n  <div>\r\n    <input value={value} onChange={onChangeHandler}/> \r\n  </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n    <form onSubmit={props.onSubmitHandler}> \r\n        <div>\r\n            name: <input value={props.nameValue} onChange={props.nameOnChangeHandler}/>\r\n        </div>\r\n        <div>\r\n            number: <input value={props.numberValue} onChange={props.numberOnChangeHandler}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, filter, onClickHandler}) => (\r\n    <div>\r\n        {persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n            .map(person =>\r\n            <div key={person.id}>   \r\n                <label>{person.name} {person.number} </label> \r\n                <button onClick={onClickHandler} id={person.id}>Remove</button>\r\n            </div>\r\n    )}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\nconst errorStyle = {\r\n  color: 'red',\r\n  fontSize: 25,\r\n  borderStyle: 'solid',\r\n  padding: 15,\r\n  marginBottom: 15\r\n}\r\nconst notificationStyle = {\r\n  color: 'green',\r\n  fontSize: 25,\r\n  borderStyle: 'solid',\r\n  padding: 15,\r\n  marginBottom: 15\r\n}\r\nconst Notification = ({message, errorValue}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  if (errorValue === true) {\r\n    return (\r\n      <div style={errorStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div style={notificationStyle}>\r\n      {message}\r\n    </div>\r\n\r\n  )\r\n} \r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ errorValue, setErrorValue] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = { name: newName, number: newNumber }\n    //console.log('button was clicked', event.target)\n    //console.log(persons.map(person => person.name))\n    if ( persons.map(person => person.name).includes(newName)) {\n      if (window.confirm(`${newName} has already been added to phonebook! Do you want to replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const id = person.id\n        //console.log(id)\n        personService\n          .update(id, personObject)\n          .then(updatedPerson => {\n            setPersons(persons.map(person =>  person.id !== id ? person : updatedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification(`The number of ${updatedPerson.name} has been updated`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorValue(true)\n            setNotification(`Information of ${person.name} has already been removed from server` )\n            setTimeout(() => {\n              setNotification(null)\n              setErrorValue(false)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== id))\n          })\n      }  \n    } else {\n      personService\n        .create(personObject)\n          .then(createdPerson => {\n            console.log('created')\n            setPersons(persons.concat(createdPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotification(`Added ${createdPerson.name}.`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            console.log(error.response.data.error)\n            setErrorValue(true)\n            setNotification(error.response.data.error)\n            setTimeout(() => {\n              setNotification(null)\n              setErrorValue(false)\n            }, 5000)\n          })\n    }\n  }\n\n  const removePerson = event => {\n    //console.log(event)\n    //console.log(event.target)\n    const id = event.target.id\n    //console.log(typeof(id))\n    //console.log(id)\n    const person = persons.find(p => p.id === id)\n    //console.log(typeof(person.id))\n    //console.log(person.id)\n    console.log(person)\n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\n      personService\n        .remove(id)\n        .then(responseObject => {\n          console.log(\"removed\")\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification(`Removed ${person.name}.`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  } \n\n  const handleNewName = (event) => {\n    //console.log(event.target)\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNewNumber = (event) => {\n    //console.log(event.target)\n    setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} errorValue={errorValue}/>\n      <Filter value={filter} onChangeHandler={handleFilter}/> \n      <h2>add</h2>\n      <PersonForm nameValue={newName} \n                  nameOnChangeHandler={handleNewName}\n                  numberValue={newNumber}\n                  numberOnChangeHandler={handleNewNumber} \n                  onSubmitHandler={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} onClickHandler={removePerson}/>\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById('root'))\n"],"sourceRoot":""}